/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package quanlycuahanggiay_java.GUI;

import quanlycuahanggiay_java.BUS.ChiTietHoaDonBUS;
import quanlycuahanggiay_java.BUS.ChiTietKMBUS;
import quanlycuahanggiay_java.BUS.HoaDonBUS;
import quanlycuahanggiay_java.BUS.KhachHangBUS;
import quanlycuahanggiay_java.BUS.KhuyenMaiBUS;
import quanlycuahanggiay_java.BUS.GiayBUS;
import quanlycuahanggiay_java.DTO.ChiTietHoaDon;
import quanlycuahanggiay_java.DTO.ChuongTrinhKhuyenMai;
import quanlycuahanggiay_java.DTO.KhachHang;
import quanlycuahanggiay_java.DTO.ChiTietChuongTrinhKhuyenMai;
import quanlycuahanggiay_java.DTO.Giay;
import quanlycuahanggiay_java.DTO.HoaDon;
import quanlycuahanggiay_java.DAO.HoaDonDAO;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import javax.swing.table.TableModel;
import java.io.FileOutputStream;
import java.io.IOException;

import quanlycuahanggiay_java.DAO.ConnectUnit;
import quanlycuahanggiay_java.DAO.ConectToDB;

import java.sql.ResultSet;
import java.sql.Connection;
import java.awt.*;
import java.awt.event.*;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.math.BigDecimal;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.CardLayout;
import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.WindowConstants;
import javax.swing.SwingUtilities;

/**
 *
 * @author Admin
 */
public class HoaDonGUI_panel extends javax.swing.JPanel {

    /**
     * Creates new form HoaDonGUI_panel
     */
    public HoaDonGUI_panel() {
        initComponents();
        showDuLieu();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        TT = new javax.swing.JLabel();
        MaKH = new javax.swing.JLabel();
        MaHD = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        MaKM = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        MaNV = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        TaoMoi = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        DeletdHD = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ChiTietHD = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        ChiTiet = new javax.swing.JTable();
        excel = new javax.swing.JButton();
        excel_ct = new javax.swing.JButton();

        setBackground(new java.awt.Color(250, 243, 224));
        setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(169, 169, 169)));
        setForeground(new java.awt.Color(250, 243, 224));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Tổng tiền");

        TT.setBackground(new java.awt.Color(51, 255, 204));
        TT.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        TT.setForeground(new java.awt.Color(0, 0, 0));
        TT.setBorder(new javax.swing.border.MatteBorder(null));

        MaKH.setBackground(new java.awt.Color(51, 255, 204));
        MaKH.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        MaKH.setForeground(new java.awt.Color(0, 0, 0));
        MaKH.setBorder(new javax.swing.border.MatteBorder(null));

        MaHD.setBackground(new java.awt.Color(51, 255, 204));
        MaHD.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        MaHD.setForeground(new java.awt.Color(0, 0, 0));
        MaHD.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Mã hóa đơn");

        MaKM.setBackground(new java.awt.Color(51, 255, 204));
        MaKM.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        MaKM.setForeground(new java.awt.Color(0, 0, 0));
        MaKM.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Mã nhân viên");

        MaNV.setBackground(new java.awt.Color(51, 255, 204));
        MaNV.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        MaNV.setForeground(new java.awt.Color(0, 0, 0));
        MaNV.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Mã khách hàng");

        TaoMoi.setBackground(new java.awt.Color(51, 255, 204));
        TaoMoi.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        TaoMoi.setForeground(new java.awt.Color(0, 0, 0));
        TaoMoi.setText("Tạo mới");
        TaoMoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TaoMoiMouseClicked(evt);
            }
        });
        TaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TaoMoiActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Mã khuyến mãi");

        DeletdHD.setBackground(new java.awt.Color(51, 255, 204));
        DeletdHD.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        DeletdHD.setForeground(new java.awt.Color(0, 0, 0));
        DeletdHD.setText("Xóa");
        DeletdHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeletdHDMouseClicked(evt);
            }
        });
        DeletdHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletdHDActionPerformed(evt);
            }
        });

        ChiTietHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ChiTietHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChiTietHDMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ChiTietHD);

        ChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Giày", "Mã HD", "Số lượng", "Giá bán", "Mã khuyến mãi", "Tỉ lệ khuyến mãi"
            }
        ));
        ChiTiet.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                ChiTietComponentShown(evt);
            }
        });
        jScrollPane2.setViewportView(ChiTiet);

        excel.setBackground(new java.awt.Color(51, 255, 204));
        excel.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        excel.setForeground(new java.awt.Color(0, 0, 0));
        excel.setText("Xuất Excel");
        excel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                excelMouseClicked(evt);
            }
        });
        excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excelActionPerformed(evt);
            }
        });

        excel_ct.setBackground(new java.awt.Color(51, 255, 204));
        excel_ct.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        excel_ct.setForeground(new java.awt.Color(0, 0, 0));
        excel_ct.setText("Xuất Chi Tiết");
        excel_ct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                excel_ctMouseClicked(evt);
            }
        });
        excel_ct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excel_ctActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10))
                            .addGap(13, 13, 13)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(TT, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(MaKM, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jLabel9)
                        .addComponent(jLabel8))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DeletdHD, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(TaoMoi)
                .addGap(81, 81, 81)
                .addComponent(excel)
                .addGap(76, 76, 76)
                .addComponent(excel_ct)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(MaKM, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 96, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(excel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeletdHD, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(excel_ct, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void resetChiTietTable() {
        String[] columnNames = {"Mã giày", "Mã hóa đơn", "Số lượng", "Giá bán"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        ChiTiet.setModel(model);
    }
    private void TaoMoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TaoMoiMouseClicked

        BanHang_panel bhp = new BanHang_panel();
        MainFrame1 mf = (MainFrame1) SwingUtilities.getWindowAncestor(this);
        mf.getBody_panel().add(bhp, "BanHang_panel");
        CardLayout cl = (CardLayout) (mf.getBody_panel().getLayout());
        cl.show(mf.getBody_panel(), "BanHang_panel");
        mf.getBody_panel().revalidate();
        mf.getBody_panel().repaint();
    }//GEN-LAST:event_TaoMoiMouseClicked
    private void showDuLieu() {
        String[] arr = {"Mã HĐ", "Mã KH", "Mã KM", "Mã NV", "Ngày bán", "Tổng tiền"};
        DefaultTableModel model = new DefaultTableModel(arr, 0);

        ConnectUnit connect = new ConnectUnit();
        try {
            ResultSet result = connect.Select("HOADON"); // Lấy dữ liệu từ bảng HOADON

            // Thêm dữ liệu mới vào bảng
            while (result.next()) {
                int maHD = result.getInt("MAHD");
                int maKH = result.getInt("MAKH");
                String maKM = result.getString("MAKM");
                int maNV = result.getInt("MANV");
                Date ngayBan = result.getDate("NGAYBAN");
                BigDecimal tongTien = result.getBigDecimal("TONGTIEN");

                String[] rowData = {String.valueOf(maHD), String.valueOf(maKH), maKM, String.valueOf(maNV), String.valueOf(ngayBan), String.valueOf(tongTien)};
                model.addRow(rowData);
            }

            ListSelectionModel LM = ChiTietHD.getSelectionModel();
            LM.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); // Chỉ cho phép chọn một dòng

            LM.addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent event) {
                    if (!event.getValueIsAdjusting()) {
                        int[] rows = ChiTietHD.getSelectedRows();
                        int[] cols = ChiTietHD.getSelectedColumns();

                        if (rows.length > 0 && cols.length > 0) { // Đảm bảo có ít nhất một hàng và một cột được chọn
                            Memory.MaHD = Integer.parseInt(String.valueOf(ChiTietHD.getValueAt(rows[0], 0))); // Lưu lại mã hóa đơn đang được chọn

                            MaHD.setText(String.valueOf(ChiTietHD.getValueAt(rows[0], 0)));
                            MaKH.setText(String.valueOf(ChiTietHD.getValueAt(rows[0], 1)));
                            MaKM.setText(String.valueOf(ChiTietHD.getValueAt(rows[0], 2)));
                            MaNV.setText(String.valueOf(ChiTietHD.getValueAt(rows[0], 3)));
                            TT.setText(String.valueOf(ChiTietHD.getValueAt(rows[0], 5)));

                            String[] secondColumnNames = {"Mã giày", "Mã hóa đơn", "Số lượng", "Giá bán"};
                            DefaultTableModel Model2 = new DefaultTableModel(secondColumnNames, 0);
                            ConnectUnit connect = new ConnectUnit();

                            try {
                                ResultSet result2 = connect.Select("CHITIETHOADON", "MAHD = " + Memory.MaHD);

                                while (result2.next()) {
                                    int maGiay = result2.getInt("MAGIAY");
                                    int soLuong = result2.getInt("SOLUONG");
                                    BigDecimal giaBan = result2.getBigDecimal("GIABAN");

                                    String[] rowData = {String.valueOf(maGiay), String.valueOf(Memory.MaHD), String.valueOf(soLuong), String.valueOf(giaBan)};
                                    Model2.addRow(rowData);
                                }

                                // Gán model mới cho bảng thứ hai
                                ChiTiet.setModel(Model2);
                            } catch (Exception ex) {
                                // Xử lý ngoại lệ
                                ex.printStackTrace();
                            } finally {
                                try {
                                    connect.Close();
                                } catch (Exception ex) {
                                    ex.printStackTrace();
                                }
                            }
                        }
                    }
                }
            });
        } catch (Exception e) {
            // Xử lý ngoại lệ
            e.printStackTrace();
        } finally {
            try {
                connect.Close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }

        ChiTietHD.setModel(model);
    }

    private void DeletdHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeletdHDMouseClicked

    }//GEN-LAST:event_DeletdHDMouseClicked

    private void DeletdHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletdHDActionPerformed
        ConnectUnit connect = new ConnectUnit();
        try {
            connect.Delete("CHITIETHOADON", "MAHD = " + Memory.MaHD);
            connect.Delete("HOADON", "MAHD = " + Memory.MaHD);
            showDuLieu();
            resetChiTietTable();
            MaHD.setText("");
            MaKH.setText("");
            MaKM.setText("");
            MaNV.setText("");
            TT.setText("");
        } catch (Exception e) {
            System.out.println("Khong the xoa");
        }
    }//GEN-LAST:event_DeletdHDActionPerformed

    private void ChiTietHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChiTietHDMouseClicked

    }//GEN-LAST:event_ChiTietHDMouseClicked

    private void ChiTietComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ChiTietComponentShown

    }//GEN-LAST:event_ChiTietComponentShown

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        showDuLieu();
    }//GEN-LAST:event_formComponentShown

    private void TaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TaoMoiActionPerformed
        BanHang_panel bhp = new BanHang_panel();
        MainFrame1 mf = new MainFrame1();
        mf.getBody_panel().add(bhp, "BanHang_panel");
        CardLayout cl = (CardLayout) (mf.getBody_panel().getLayout());
        cl.show(mf.getBody_panel(), "HoaDonGUI");
        mf.getBody_panel().revalidate();
        mf.getBody_panel().repaint();
    }//GEN-LAST:event_TaoMoiActionPerformed

    private void excelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_excelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_excelMouseClicked

    private void excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excelActionPerformed
        exportToExcel();
    }//GEN-LAST:event_excelActionPerformed

    private void excel_ctMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_excel_ctMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_excel_ctMouseClicked

    private void excel_ctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excel_ctActionPerformed
        exportToExcelChiTiet();
    }//GEN-LAST:event_excel_ctActionPerformed

    private void exportToExcel() {
        Workbook workbook = new XSSFWorkbook();
        Sheet sheet1 = workbook.createSheet("HOADON");

        // Xuất dữ liệu từ ChiTietHD
        TableModel model1 = ChiTietHD.getModel();
        Row headerRow1 = sheet1.createRow(0);
        for (int i = 0; i < model1.getColumnCount(); i++) {
            headerRow1.createCell(i).setCellValue(model1.getColumnName(i));
        }

        for (int i = 0; i < model1.getRowCount(); i++) {
            Row row = sheet1.createRow(i + 1);
            for (int j = 0; j < model1.getColumnCount(); j++) {
                row.createCell(j).setCellValue(String.valueOf(model1.getValueAt(i, j)));
            }
        }

      

        // Đường dẫn lưu file
        String filePath = "D:/Users/Admin/Documents/NetBeansProjects/QuanLyCuaHangGiay_Java/src/quanlycuahanggiay_java/excel/exported_data.xlsx";
        try (FileOutputStream fileOut = new FileOutputStream(filePath)) {
            workbook.write(fileOut);
            workbook.close();
            JOptionPane.showMessageDialog(this, "Export successful to " + filePath);
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error exporting file: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void exportToExcelChiTiet() {
        Workbook workbook = new XSSFWorkbook();

        Sheet sheet = workbook.createSheet("CHITIETHOADON");
        TableModel model2 = ChiTiet.getModel();
        Row headerRow2 = sheet.createRow(0);
        for (int i = 0; i < model2.getColumnCount(); i++) {
            headerRow2.createCell(i).setCellValue(model2.getColumnName(i));
        }
        TableModel model = ChiTiet.getModel();

        for (int i = 0; i < model2.getRowCount(); i++) {
            Row row = sheet.createRow(i + 1);
            for (int j = 0; j < model2.getColumnCount(); j++) {
                row.createCell(j).setCellValue(String.valueOf(model2.getValueAt(i, j)));
            }
        }
        for (int i = 0; i < model.getRowCount(); i++) {
            Row row = sheet.createRow(i + 1);
            for (int j = 0; j < model.getColumnCount(); j++) {
                row.createCell(j).setCellValue(String.valueOf(model.getValueAt(i, j)));
            }
        }

        // Tạo tên file theo mã hóa đơn đang được chọn
        String fileName = "D:/Users/Admin/Documents/NetBeansProjects/QuanLyCuaHangGiay_Java/src/quanlycuahanggiay_java/excel/" + Memory.MaHD + ".xlsx";
        try (FileOutputStream fileOut = new FileOutputStream(fileName)) {
            workbook.write(fileOut);
            workbook.close();
            JOptionPane.showMessageDialog(this, "Export successful to " + fileName);
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error exporting file: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ChiTiet;
    private javax.swing.JTable ChiTietHD;
    private javax.swing.JButton DeletdHD;
    private javax.swing.JLabel MaHD;
    private javax.swing.JLabel MaKH;
    private javax.swing.JLabel MaKM;
    private javax.swing.JLabel MaNV;
    private javax.swing.JLabel TT;
    private javax.swing.JButton TaoMoi;
    private javax.swing.JButton excel;
    private javax.swing.JButton excel_ct;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
