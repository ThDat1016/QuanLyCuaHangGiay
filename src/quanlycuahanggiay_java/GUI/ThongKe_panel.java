/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package quanlycuahanggiay_java.GUI;

import java.math.BigDecimal;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import quanlycuahanggiay_java.DAO.HoaDonDAO;
import quanlycuahanggiay_java.DAO.PhieuNhapDAO;
import quanlycuahanggiay_java.DTO.HoaDon;
import quanlycuahanggiay_java.DTO.PhieuNhap;
import quanlycuahanggiay_java.DAO.ConnectUnit;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Collections;
import java.util.Comparator;
import java.math.RoundingMode;

/**
 *
 * @author Admin
 */
public class ThongKe_panel extends javax.swing.JPanel {

    private ArrayList<HoaDon> listHD;
    private ArrayList<PhieuNhap> listPN;

    /**
     * Creates new form ThongKe_panel
     */
    public ThongKe_panel() {
        listHD = new ArrayList<>();
        listPN = new ArrayList<>();

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        body_panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dsThu = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dsChi = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        Quy_Nam = new com.toedter.calendar.JYearChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Thang = new com.toedter.calendar.JMonthChooser();
        Thang_Nam = new com.toedter.calendar.JYearChooser();
        Nam = new com.toedter.calendar.JYearChooser();
        TuNgay = new javax.swing.JRadioButton();
        NgayKT = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TheoQuy = new javax.swing.JRadioButton();
        TheoThang = new javax.swing.JRadioButton();
        TheoNam = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        NgayBD = new com.toedter.calendar.JDateChooser();
        Quy = new javax.swing.JComboBox<>();
        TongThu = new javax.swing.JTextField();
        TongChi = new javax.swing.JTextField();
        LoiNhuan = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        hdCaoNhat = new javax.swing.JTextField();
        pnCaoNhat = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        hdThapNhat = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        pnThapNhat = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        tbHD = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        tbPN = new javax.swing.JTextField();

        body_panel.setBackground(new java.awt.Color(250, 243, 224));
        body_panel.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(169, 169, 169)));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("THỐNG KÊ");

        jLabel7.setBackground(new java.awt.Color(250, 243, 224));
        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Danh sách thu(Hóa đơn)");

        dsThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(dsThu);

        jLabel8.setBackground(new java.awt.Color(250, 243, 224));
        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Danh sách chi(Nhập hàng)");

        dsChi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(dsChi);

        jPanel1.setBackground(new java.awt.Color(250, 243, 224));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(51, 255, 153)));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Năm");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Năm");

        TuNgay.setBackground(new java.awt.Color(250, 243, 224));
        buttonGroup1.add(TuNgay);
        TuNgay.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        TuNgay.setForeground(new java.awt.Color(0, 0, 0));
        TuNgay.setText("Từ ngày");
        TuNgay.setBorder(null);
        TuNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TuNgayActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(51, 255, 204));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("THỐNG KÊ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Tổng chi:");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Tổng thu:");

        TheoQuy.setBackground(new java.awt.Color(250, 243, 224));
        buttonGroup1.add(TheoQuy);
        TheoQuy.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        TheoQuy.setForeground(new java.awt.Color(0, 0, 0));
        TheoQuy.setText("Theo quý");
        TheoQuy.setBorder(null);

        TheoThang.setBackground(new java.awt.Color(250, 243, 224));
        buttonGroup1.add(TheoThang);
        TheoThang.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        TheoThang.setForeground(new java.awt.Color(0, 0, 0));
        TheoThang.setText("Theo tháng");
        TheoThang.setBorder(null);

        TheoNam.setBackground(new java.awt.Color(250, 243, 224));
        buttonGroup1.add(TheoNam);
        TheoNam.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        TheoNam.setForeground(new java.awt.Color(0, 0, 0));
        TheoNam.setText("Theo năm");
        TheoNam.setBorder(null);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Lợi nhuận:");

        Quy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quý 1", "Quý 2", "Quý 3", "Quý 4" }));

        TongThu.setBackground(new java.awt.Color(250, 243, 224));
        TongThu.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        TongThu.setBorder(null);
        TongThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TongThuActionPerformed(evt);
            }
        });

        TongChi.setBackground(new java.awt.Color(250, 243, 224));
        TongChi.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        TongChi.setBorder(null);

        LoiNhuan.setBackground(new java.awt.Color(250, 243, 224));
        LoiNhuan.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        LoiNhuan.setBorder(null);
        LoiNhuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoiNhuanActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("DOANH THU");

        jLabel11.setBackground(new java.awt.Color(250, 243, 224));
        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlycuahanggiay_java/images/muiten (1).png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(TuNgay)
                        .addGap(18, 18, 18)
                        .addComponent(NgayBD, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel11)
                        .addGap(3, 3, 3)
                        .addComponent(NgayKT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TongChi, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LoiNhuan, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TongThu, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TheoThang)
                                    .addComponent(TheoQuy))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Quy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Thang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Quy_Nam, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Thang_Nam, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(TheoNam)
                                .addGap(41, 41, 41)
                                .addComponent(Nam, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NgayBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TuNgay)
                    .addComponent(NgayKT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Quy_Nam, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Quy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TheoQuy)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel9))))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Thang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TheoThang, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Thang_Nam, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TheoNam)
                    .addComponent(Nam, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TongThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(TongChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(LoiNhuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86))
        );

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Tiền HD cao nhất: ");

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Tiền PN cao nhất: ");

        hdCaoNhat.setBackground(new java.awt.Color(250, 243, 224));
        hdCaoNhat.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        hdCaoNhat.setBorder(null);

        pnCaoNhat.setBackground(new java.awt.Color(250, 243, 224));
        pnCaoNhat.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pnCaoNhat.setBorder(null);

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Tiền HD thấp nhất: ");

        hdThapNhat.setBackground(new java.awt.Color(250, 243, 224));
        hdThapNhat.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        hdThapNhat.setBorder(null);

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Tiền PN thấp nhất: ");

        pnThapNhat.setBackground(new java.awt.Color(250, 243, 224));
        pnThapNhat.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pnThapNhat.setBorder(null);
        pnThapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pnThapNhatActionPerformed(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Trung bình HD:");

        tbHD.setBackground(new java.awt.Color(250, 243, 224));
        tbHD.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tbHD.setBorder(null);

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Trung bình PN:");

        tbPN.setBackground(new java.awt.Color(250, 243, 224));
        tbPN.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tbPN.setBorder(null);
        tbPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbPNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout body_panelLayout = new javax.swing.GroupLayout(body_panel);
        body_panel.setLayout(body_panelLayout);
        body_panelLayout.setHorizontalGroup(
            body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(body_panelLayout.createSequentialGroup()
                .addGap(616, 616, 616)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(body_panelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(body_panelLayout.createSequentialGroup()
                        .addGroup(body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(body_panelLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(body_panelLayout.createSequentialGroup()
                                .addGroup(body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(hdThapNhat, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hdCaoNhat, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tbHD, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(86, 86, 86)
                                .addGroup(body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(body_panelLayout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(3, 3, 3)
                                        .addComponent(pnCaoNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(body_panelLayout.createSequentialGroup()
                                        .addGroup(body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel16))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pnThapNhat)
                                            .addComponent(tbPN))))
                                .addGap(46, 46, 46)))
                        .addContainerGap())
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(body_panelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        body_panelLayout.setVerticalGroup(
            body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, body_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(body_panelLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel12)
                            .addComponent(hdCaoNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnCaoNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addGroup(body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(hdThapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)
                                .addComponent(pnThapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(45, 45, 45)
                        .addGroup(body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15)
                            .addGroup(body_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tbHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16)
                                .addComponent(tbPN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(body_panelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(body_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(body_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TuNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TuNgayActionPerformed

    }//GEN-LAST:event_TuNgayActionPerformed

    private void tbPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbPNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbPNActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        listHD.clear();
        listPN.clear();
        ConnectUnit conn = new ConnectUnit();
        String[] hdTableHeaders = {"Mã HĐ", "Mã KH", "Mã KM", "Mã NV", "Ngày bán", "Tổng tiền"};
        String[] pnTableHeaders = {"Mã PN", "Mã NCC", "Mã NV", "Ngày Nhập", "Tổng tiền"};

        DefaultTableModel modelHd = new DefaultTableModel(hdTableHeaders, 0);
        DefaultTableModel modelPn = new DefaultTableModel(pnTableHeaders, 0);
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        // Lấy năm hiện tại
        LocalDate currentDate = LocalDate.now();
        int currentYear = currentDate.getYear();

        try {
            if (TuNgay.isSelected()) {
                handleTuNgaySelection(conn, modelHd, modelPn, dateFormat);
            } else if (TheoQuy.isSelected()) {
                handleTheoQuySelection(conn, modelHd, modelPn, currentYear);
            } else if (TheoThang.isSelected()) {
                handleTheoThangSelection(conn, modelHd, modelPn);
            } else if (TheoNam.isSelected()) {
                handleTheoNamSelection(conn, modelHd, modelPn, currentYear);
            } else {
                JOptionPane.showMessageDialog(this, "Hãy chọn 1 trong 4 lựa chọn", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            handleError(ex);
        }

        showLoiNhuan();
        showCacDoiTuong();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TongThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TongThuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TongThuActionPerformed

    private void LoiNhuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoiNhuanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoiNhuanActionPerformed

    private void pnThapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pnThapNhatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pnThapNhatActionPerformed
    private void handleTuNgaySelection(ConnectUnit conn, DefaultTableModel modelHd, DefaultTableModel modelPn, SimpleDateFormat dateFormat) throws Exception {
        Date startDate = NgayBD.getDate();
        Date endDate = NgayKT.getDate();

        if (!validateDates(startDate, endDate)) {
            return;
        }

        String dateStrBD = dateFormat.format(startDate);
        String dateStrKT = dateFormat.format(endDate);

        String conditionHd = "NGAYBAN BETWEEN '" + dateStrBD + "' AND '" + dateStrKT + "'";
        String conditionPn = "NGAYNHAP BETWEEN '" + dateStrBD + "' AND '" + dateStrKT + "'";

        showTableHD(conn, modelHd, conditionHd);
        showTablePN(conn, modelPn, conditionPn);
    }

    private void handleTheoQuySelection(ConnectUnit conn, DefaultTableModel modelHd, DefaultTableModel modelPn, int currentYear) throws Exception {
        int selectedYear = Quy_Nam.getYear();
        if (selectedYear > currentYear) {
            JOptionPane.showMessageDialog(this, "Năm được chọn phải bé hơn hoặc bằng năm hiện tại", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String[] dateRange = getDateRangeForQuarter((String) Quy.getSelectedItem(), selectedYear);
        if (dateRange == null) {
            JOptionPane.showMessageDialog(this, "Quý không hợp lệ", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String conditionHd = "NGAYBAN BETWEEN '" + dateRange[0] + "' AND '" + dateRange[1] + "'";
        String conditionPn = "NGAYNHAP BETWEEN '" + dateRange[0] + "' AND '" + dateRange[1] + "'";

        showTableHD(conn, modelHd, conditionHd);
        showTablePN(conn, modelPn, conditionPn);
    }

    private void handleTheoThangSelection(ConnectUnit conn, DefaultTableModel modelHd, DefaultTableModel modelPn) throws Exception {
        int selectedMonth = Thang.getMonth() + 1; // Điều chỉnh tháng thành chỉ mục 1-based
        int selectedYear = Thang_Nam.getYear();

        // Sử dụng LocalDate để xử lý đúng chuyển đổi tháng và năm
        LocalDate firstDayOfMonth = LocalDate.of(selectedYear, selectedMonth, 1);
        LocalDate lastDayOfMonth = firstDayOfMonth.withDayOfMonth(firstDayOfMonth.lengthOfMonth());

        String dateStrStart = firstDayOfMonth.toString();
        String dateStrEnd = lastDayOfMonth.toString();

        String conditionHd = "NGAYBAN BETWEEN '" + dateStrStart + "' AND '" + dateStrEnd + "'";
        String conditionPn = "NGAYNHAP BETWEEN '" + dateStrStart + "' AND '" + dateStrEnd + "'";

        showTableHD(conn, modelHd, conditionHd);
        showTablePN(conn, modelPn, conditionPn);
    }

    private void handleTheoNamSelection(ConnectUnit conn, DefaultTableModel modelHd, DefaultTableModel modelPn, int currentYear) throws Exception {
        int selectedYear = Nam.getYear();
        if (selectedYear > currentYear) {
            JOptionPane.showMessageDialog(this, "Năm được chọn phải bé hơn hoặc bằng năm hiện tại", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String dateStrStart = selectedYear + "-01-01";
        String dateStrEnd = selectedYear + "-12-31";

        String conditionHd = "NGAYBAN BETWEEN '" + dateStrStart + "' AND '" + dateStrEnd + "'";
        String conditionPn = "NGAYNHAP BETWEEN '" + dateStrStart + "' AND '" + dateStrEnd + "'";

        showTableHD(conn, modelHd, conditionHd);
        showTablePN(conn, modelPn, conditionPn);
    }

    private String[] getDateRangeForQuarter(String quarter, int year) {
        switch (quarter) {
            case "Quý 1":
                return new String[]{year + "-01-01", year + "-03-31"};
            case "Quý 2":
                return new String[]{year + "-04-01", year + "-06-30"};
            case "Quý 3":
                return new String[]{year + "-07-01", year + "-09-30"};
            case "Quý 4":
                return new String[]{year + "-10-01", year + "-12-31"};
            default:
                return null;
        }
    }

    private boolean validateDates(Date startDate, Date endDate) {
        if (startDate == null || endDate == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn cả ngày bắt đầu và ngày kết thúc", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (startDate.getTime() > endDate.getTime()) {
            JOptionPane.showMessageDialog(this, "Ngày bắt đầu phải bé hơn hoặc bằng ngày kết thúc", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private void showTableHD(ConnectUnit conn, DefaultTableModel modelHd, String condition) {
        try {
            ResultSet result = conn.Select("HOADON", condition);
            modelHd.setRowCount(0); // Reset bảng

            while (result.next()) {
                HoaDon hd = new HoaDon();
                hd.setMaHD(result.getInt("MAHD"));
                hd.setMaKH(result.getInt("MAKH"));
                hd.setMaKM(result.getString("MAKM"));
                hd.setMaNV(result.getInt("MANV"));
                hd.setNgayBan(result.getDate("NGAYBAN"));
                hd.setTongTien(result.getBigDecimal("TONGTIEN"));
                String[] rowData = {
                    String.valueOf(result.getInt("MAHD")),
                    String.valueOf(result.getInt("MAKH")),
                    result.getString("MAKM"),
                    String.valueOf(result.getInt("MANV")),
                    String.valueOf(result.getDate("NGAYBAN")),
                    String.valueOf(result.getBigDecimal("TONGTIEN"))
                };
                modelHd.addRow(rowData);
                listHD.add(hd);
            }

            dsThu.setModel(modelHd);
        } catch (Exception ex) {
            handleError(ex);
        }
    }

    private void showTablePN(ConnectUnit conn, DefaultTableModel modelPn, String condition) {
        try {
            ResultSet result = conn.Select("PHIEUNHAP", condition);
            modelPn.setRowCount(0); // Reset bảng

            while (result.next()) {
                PhieuNhap pn = new PhieuNhap();
                pn.setMaPN(result.getInt("MAPN"));
                pn.setMaNCC(result.getString("MANCC"));
                pn.setMaNV(result.getInt("MANV"));
                pn.setNgayNhap(result.getDate("NGAYNHAP"));
                pn.setTongTien(result.getBigDecimal("TONGTIEN"));

                String[] rowData = {
                    String.valueOf(pn.getMaPN()),
                    pn.getMaNCC(),
                    String.valueOf(pn.getMaNV()),
                    String.valueOf(pn.getNgayNhap()),
                    String.valueOf(pn.getTongTien())
                };
                modelPn.addRow(rowData);
                listPN.add(pn);
            }

            dsChi.setModel(modelPn);
        } catch (Exception ex) {
            handleError(ex);
        }
    }

    private void handleError(Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

    public BigDecimal TongTien(ArrayList<BigDecimal> arr) {
        BigDecimal sum = BigDecimal.ZERO;
        for (BigDecimal temp : arr) {
            if (temp != null) {
                sum = sum.add(temp);
            }
        }
        return sum;
    }

    public static void sortHoaDonByTongTien(ArrayList<HoaDon> list) {
        Collections.sort(list, Comparator.comparing(HoaDon::getTongTien));
    }

    public static void sortPhieuNhapByTongTien(ArrayList<PhieuNhap> list) {
        Collections.sort(list, Comparator.comparing(PhieuNhap::getTongTien));
    }

    private void showLoiNhuan() {
        ArrayList<BigDecimal> ttChi = new ArrayList<>();
        ArrayList<BigDecimal> ttThu = new ArrayList<>();

        for (HoaDon hoadon : listHD) {
            System.out.println("HoaDon: " + hoadon.getTongTien());
            ttThu.add(hoadon.getTongTien());
        }

        for (PhieuNhap phieunhap : listPN) {
            System.out.println("PhieuNhap: " + phieunhap.getTongTien());
            ttChi.add(phieunhap.getTongTien());
        }

        BigDecimal tongthu = TongTien(ttThu);
        BigDecimal tongchi = TongTien(ttChi);

        BigDecimal loinhuan = tongthu.subtract(tongchi);
        LoiNhuan.setText(loinhuan.toString());
        TongThu.setText(tongthu.toString());
        TongChi.setText(tongchi.toString());

        int listSize = listHD.size(); // Assuming listHD is an ArrayList
        if (listSize == 0) {
            tbHD.setText("0");
        } else {
            System.out.println(listSize);
            BigDecimal result = tongthu.divide(BigDecimal.valueOf(listSize), RoundingMode.HALF_UP);
            tbHD.setText(result.toString());
        }

        int listSize_pn = listPN.size();
        if (listSize_pn == 0) {
            tbPN.setText("0");
        } else {
            BigDecimal result_pn = tongchi.divide(BigDecimal.valueOf(listSize_pn), RoundingMode.HALF_UP);
            tbPN.setText(result_pn.toString());
        }

        System.out.println("TongChi: " + tongchi);
        System.out.println("TongThu: " + tongthu);

    }

    private void showCacDoiTuong() {
        sortHoaDonByTongTien(listHD);
        sortPhieuNhapByTongTien(listPN);

        // Show the largest and smallest total amounts for HoaDon (if not empty)
        if (!listHD.isEmpty()) {
            System.out.println("HoaDon có tổng tiền lớn nhất: " + listHD.get(listHD.size() - 1).getTongTien());
            hdCaoNhat.setText(listHD.get(listHD.size() - 1).getTongTien().toString());
            hdThapNhat.setText(listHD.get(0).getTongTien().toString());
        } else {
            System.out.println("Danh sách hóa đơn trống.");
            hdCaoNhat.setText("0");
            hdThapNhat.setText("0");
        }

        // Show the largest and smallest total amounts for PhieuNhap (if not empty)
        if (!listPN.isEmpty()) {
            pnCaoNhat.setText(listPN.get(listPN.size() - 1).getTongTien().toString());
            pnThapNhat.setText(listPN.get(0).getTongTien().toString());
        } else {
            System.out.println("Danh sách phiếu nhập trống.");
            pnCaoNhat.setText("0");
            pnThapNhat.setText("0");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField LoiNhuan;
    private com.toedter.calendar.JYearChooser Nam;
    private com.toedter.calendar.JDateChooser NgayBD;
    private com.toedter.calendar.JDateChooser NgayKT;
    private javax.swing.JComboBox<String> Quy;
    private com.toedter.calendar.JYearChooser Quy_Nam;
    private com.toedter.calendar.JMonthChooser Thang;
    private com.toedter.calendar.JYearChooser Thang_Nam;
    private javax.swing.JRadioButton TheoNam;
    private javax.swing.JRadioButton TheoQuy;
    private javax.swing.JRadioButton TheoThang;
    private javax.swing.JTextField TongChi;
    private javax.swing.JTextField TongThu;
    private javax.swing.JRadioButton TuNgay;
    private javax.swing.JPanel body_panel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTable dsChi;
    private javax.swing.JTable dsThu;
    private javax.swing.JTextField hdCaoNhat;
    private javax.swing.JTextField hdThapNhat;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField pnCaoNhat;
    private javax.swing.JTextField pnThapNhat;
    private javax.swing.JTextField tbHD;
    private javax.swing.JTextField tbPN;
    // End of variables declaration//GEN-END:variables
}
